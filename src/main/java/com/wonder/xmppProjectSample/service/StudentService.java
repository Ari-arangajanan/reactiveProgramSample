package com.wonder.xmppProjectSample.service;import com.wonder.xmppProjectSample.model.Student;import org.springframework.stereotype.Service;import reactor.core.publisher.Flux;import java.time.Duration;import java.util.ArrayList;import java.util.List;@Servicepublic class StudentService {    public Flux<Student> getStudentStream() {        Long start = System.currentTimeMillis();        Flux<Student> list = Flux.range(1, 20)                .delayElements(Duration.ofSeconds(1))                .doOnNext(i -> System.out.println("student rex:" + i))                .map(i -> new Student(i, "student: " + i));        Long end = System.currentTimeMillis();        System.out.println("time delay " + (end - start));        return list.log();    }    public List<Student> getAllStudent() throws InterruptedException {        Long start = System.currentTimeMillis();        List<Student> list = new ArrayList<>();        for (int i = 1; i <= +20; i++) {            list.add(new Student(i, "student: " + i));            Thread.sleep(1000);            System.out.println(list);        }        Long end = System.currentTimeMillis();        System.out.println("time delay " + (end - start));        return list;    }}